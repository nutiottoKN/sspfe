{"remainingRequest":"/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karle/Desktop/Learning/project2/sspfrontend/src/components/FrontEnd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karle/Desktop/Learning/project2/sspfrontend/src/components/FrontEnd.vue","mtime":1608160263640},{"path":"/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1606035500272},{"path":"/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/babel-loader/lib/index.js","mtime":1606744114753},{"path":"/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1606035500272},{"path":"/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/vue-loader/lib/index.js","mtime":1606035517917}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgRGF0YVBpY2tlciBmcm9tICd2dWUyLWRhdGVwaWNrZXInOwppbXBvcnQgJ3Z1ZTItZGF0ZXBpY2tlci9pbmRleC5jc3MnOwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7Ci8vaW1wb3J0IExpbmVDaGFydCBmcm9tICcuL3V0aWxzL0xpbmVDaGFydCcKLy9pbXBvcnQgTGluZUNoYXJ0IGZyb20gJy4vdXRpbHMvTGluZUNoYXJ0LnZ1ZSc7CmltcG9ydCBTY2F0dGVyQ2hhcnQgZnJvbSAnLi91dGlscy9TY2F0dGVyQ2hhcnQudnVlJzsKLy9pbXBvcnQgeyBMaW5lIH0gZnJvbSAndnVlLWNoYXJ0anMnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdGcm9udEVuZCcsCiAgY29tcG9uZW50czogewogICAgRGF0YVBpY2tlciwKICAgIC8vTGluZUNoYXJ0LAogICAgU2NhdHRlckNoYXJ0LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVwcGVyTGltaXQ6ICcnLAogICAgICBsZXNzTGltaXQ6ICcnLAogICAgICBzdGFydERhdGU6ICcnLAogICAgICBlbmREYXRlOiAnJywKICAgICAgTHNlbGVjdGVkOiAnJywKICAgICAgRnNlbGVjdGVkOiAnJywKICAgICAgbGluZUxpc3Q6IFtdLAogICAgICBmaWx0ZXJzTGlzdDogW10sCiAgICAgIGxpbWl0c0xpc3Q6IFtdLAogICAgICBmaWx0ZXJEYXRhTGlzdDogW10sCiAgICAgIGdMYWJsZTpbXSwKICAgICAgZGF0ZUxpc3Q6W10sCiAgICAgIGRhdGFMaXN0OltdLAogICAgICBva0RhdGE6IFtdLAogICAgICBtaW5tYXg6IFtdLAogICAgICBtaW5EYXRlOiAnJywKICAgICAgbWF4RGF0ZTogJycsCiAgICAgIG1pbkRhdGE6ICcnLAogICAgICBtYXhEYXRhOiAnJywKICAgICAgbWVkRGF0YTogJycsCiAgICAgIGJhZExvd2VyOiBbXSwKICAgICAgYmFkVXBwZXI6IFtdLAogICAgICBkYXRhY29sbGVjdGlvbjogbnVsbCwKICAgICAgbG93ZXJMaW5lOiBbXSwKICAgICAgdXBwZXJMaW5lOiBbXSwKICAgICAgbG9hZGVkOiBmYWxzZQogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIG1zZzogU3RyaW5nCiAgfSwKICBtZXRob2RzOiB7CgogICAgCiAgICAgZ2V0TGluZUxpc3QoKSB7CiAgICAgIGNvbnN0IHBhdGggPSAiaHR0cHM6Ly9zbWFydHN5c3RlbXNyb2plY3QuaGVyb2t1YXBwLmNvbS9hcGkvZmlsdGVyVHlwZXMiOwogICAgICBheGlvcy5nZXQocGF0aCkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLmxpbmVMaXN0ID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgfSk7CiAgICB9LAoKICAgICBnZXRMaW5lRmlsdGVycygpIHsKICAgICAgaWYodGhpcy5Mc2VsZWN0ZWQgIT0gJycpewogICAgICAgIGxldCBwYXRoID0gImh0dHBzOi8vc21hcnRzeXN0ZW1zcm9qZWN0Lmhlcm9rdWFwcC5jb20vYXBpLyIrdGhpcy5Mc2VsZWN0ZWQrIi9maWx0ZXJzIjsKICAgICAgICBheGlvcy5nZXQocGF0aCkKICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgdGhpcy5maWx0ZXJzTGlzdCA9IHJlc3BvbnNlLmRhdGEuZGF0YS5yZXZlcnNlKCk7CiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGk8dGhpcy5maWx0ZXJzTGlzdC5sZW5ndGg7IGkrKyl7CiAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5maWx0ZXJzTGlzdFtpXS5maWx0ZXJfbmFtZSk7CiAgICAgICAgICAgICAgdGhpcy5nTGFibGUucHVzaCh0aGlzLmZpbHRlcnNMaXN0W2ldLmZpbHRlcl9uYW1lKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgICB9KTsKICAgICAgfQogICAgfSwKCiAgICBnZXRGaWx0ZXJTZW5zb3JMaW1pdHMoKSB7CiAgICAgIGlmKHRoaXMuRnNlbGVjdGVkICE9ICcnKXsKICAgICAgICBsZXQgcGF0aCA9ICJodHRwczovL3NtYXJ0c3lzdGVtc3JvamVjdC5oZXJva3VhcHAuY29tL2FwaS8iK3RoaXMuTHNlbGVjdGVkKyIvIit0aGlzLkZzZWxlY3RlZCsiIjsKICAgICAgICBheGlvcy5nZXQocGF0aCkKICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgdGhpcy5saW1pdHNMaXN0ID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICAgICAgICB0aGlzLmxlc3NMaW1pdCA9IHRoaXMubGltaXRzTGlzdFswXS5ncmFwaF9sb3dlcl9saW1pdDsKICAgICAgICAgICAgdGhpcy51cHBlckxpbWl0ID0gdGhpcy5saW1pdHNMaXN0WzBdLmdyYXBoX3VwcGVyX2xpbWl0OwogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCgogICAgZ2V0RmlsdGVyRGF0YUJldHdlZW5EYXRlcygpIHsKICAgICAgdGhpcy5kYXRlTGlzdD0gW107CiAgICAgIHRoaXMuZGF0YUxpc3QgPSBbXTsKICAgICAgdGhpcy51cHBlckxpbmUgPSBbXTsKICAgICAgdGhpcy5sb3dlckxpbmUgPSBbXTsKICAgICAgdGhpcy5iYWRMb3dlciA9IFtdOwogICAgICB0aGlzLmJhZFVwcGVyID0gW107CiAgICAgIGlmKHRoaXMuc3RhcnREYXRlICE9ICcnIHx8IHRoaXMuZW5kRGF0ZSAhPSAnJyl7CiAgICAgICAgdGhpcy5zdGFydERhdGUgPSBtb21lbnQodGhpcy5zdGFydERhdGUpLmZvcm1hdCgnWVlZWS1NTS1ERCcpOwogICAgICAgIHRoaXMuZW5kRGF0ZSA9IG1vbWVudCh0aGlzLmVuZERhdGUpLmZvcm1hdCgnWVlZWS1NTS1ERCcpOwogICAgICAgIGxldCBwYXRoPSAiaHR0cHM6Ly9zbWFydHN5c3RlbXNyb2plY3QuaGVyb2t1YXBwLmNvbS9hcGkvIit0aGlzLkxzZWxlY3RlZCsiLyIrdGhpcy5Gc2VsZWN0ZWQrIi8iK3RoaXMuc3RhcnREYXRlKyImIit0aGlzLmVuZERhdGU7CiAgICAgICAgYXhpb3MuZ2V0KHBhdGgpCiAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgIHRoaXMuZmlsdGVyRGF0YUxpc3QgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgICAgIGZvcih2YXIgaT0wOyBpPHRoaXMuZmlsdGVyRGF0YUxpc3QubGVuZ3RoOyBpKyspewogICAgICAgICAgICAgIGlmKHRoaXMuZmlsdGVyRGF0YUxpc3RbaV0uYV9kYXRhID4gdGhpcy51cHBlckxpbWl0KXsKICAgICAgICAgICAgICAgIHRoaXMuYmFkVXBwZXIucHVzaCh7eDogbW9tZW50LnV0Yyh0aGlzLmZpbHRlckRhdGFMaXN0W2ldLmFfZGF0ZSkuZm9ybWF0KCdZWVlZLU1NLURELUhIOm1tOnNzJykseTogdGhpcy5maWx0ZXJEYXRhTGlzdFtpXS5hX2RhdGF9KQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBlbHNlIGlmKHRoaXMuZmlsdGVyRGF0YUxpc3RbaV0uYV9kYXRhIDwgdGhpcy5sZXNzTGltaXQpewogICAgICAgICAgICAgICAgdGhpcy5iYWRMb3dlci5wdXNoKHt4OiBtb21lbnQudXRjKHRoaXMuZmlsdGVyRGF0YUxpc3RbaV0uYV9kYXRlKS5mb3JtYXQoJ1lZWVktTU0tREQtSEg6bW06c3MnKSx5OiB0aGlzLmZpbHRlckRhdGFMaXN0W2ldLmFfZGF0YX0pCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGVsc2V7CiAgICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0LnB1c2goe3g6IG1vbWVudC51dGModGhpcy5maWx0ZXJEYXRhTGlzdFtpXS5hX2RhdGUpLmZvcm1hdCgnWVlZWS1NTS1ERC1ISDptbTpzcycpLHk6IHRoaXMuZmlsdGVyRGF0YUxpc3RbaV0uYV9kYXRhfSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgLy90aGlzLmRhdGFMaXN0LnB1c2godGhpcy5maWx0ZXJEYXRhTGlzdFtpXS5hX2RhdGEpOwogICAgICAgICAgICAgIHRoaXMuZGF0ZUxpc3QucHVzaChtb21lbnQudXRjKHRoaXMuZmlsdGVyRGF0YUxpc3RbaV0uYV9kYXRlKS5mb3JtYXQoJ1lZWVktTU0tREQtSEg6bW06c3MnKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIHRoaXMudXBwZXJMaW5lLnB1c2goe3g6IG1vbWVudC51dGModGhpcy5maWx0ZXJEYXRhTGlzdFswXS5hX2RhdGUpLmZvcm1hdCgnWVlZWS1NTS1ERC1ISDptbTpzcycpLCB5OiB0aGlzLnVwcGVyTGltaXR9KTsKICAgICAgICAgICAgdGhpcy51cHBlckxpbmUucHVzaCh7eDogbW9tZW50LnV0Yyh0aGlzLmZpbHRlckRhdGFMaXN0W3RoaXMuZmlsdGVyRGF0YUxpc3QubGVuZ3RoLTFdLmFfZGF0ZSkuZm9ybWF0KCdZWVlZLU1NLURELUhIOm1tOnNzJyksIHk6IHRoaXMudXBwZXJMaW1pdH0pOwogICAgICAgICAgICB0aGlzLmxvd2VyTGluZS5wdXNoKHt4OiBtb21lbnQudXRjKHRoaXMuZmlsdGVyRGF0YUxpc3RbMF0uYV9kYXRlKS5mb3JtYXQoJ1lZWVktTU0tREQtSEg6bW06c3MnKSwgeTogdGhpcy5sZXNzTGltaXR9KTsKICAgICAgICAgICAgdGhpcy5sb3dlckxpbmUucHVzaCh7eDogbW9tZW50LnV0Yyh0aGlzLmZpbHRlckRhdGFMaXN0W3RoaXMuZmlsdGVyRGF0YUxpc3QubGVuZ3RoLTFdLmFfZGF0ZSkuZm9ybWF0KCdZWVlZLU1NLURELUhIOm1tOnNzJyksIHk6IHRoaXMubGVzc0xpbWl0fSk7CgogICAgICAgICAgICAvKmNvbnNvbGUubG9nKHRoaXMuZmlsdGVyRGF0YUxpc3QpOwogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGVMaXN0KTsKICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy51cHBlckxpbmUpOwogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmxvd2VyTGluZSk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuYmFkVXBwZXIpOwogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGFMaXN0KTsKICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5iYWRMb3dlcik7Ki8KICAgICAgICAgICAgdGhpcy5sb2FkZWQ9IHRydWU7CiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICB9KTsKICAgICAgfQogICAgfSwKCiAgICBnZXREYXRlc01pbk1heCgpIHsKICAgICAgaWYodGhpcy5Mc2VsZWN0ZWQhPSAnJyAmJiB0aGlzLkZzZWxlY3RlZCAhPSAnJyl7CiAgICAgICAgY29uc29sZS5sb2coImtvbnRyb2xsIik7CiAgICAgICAgbGV0IHBhdGggPSAiaHR0cHM6Ly9zbWFydHN5c3RlbXNyb2plY3QuaGVyb2t1YXBwLmNvbS9hcGkvIit0aGlzLkxzZWxlY3RlZCsiLyIrdGhpcy5Gc2VsZWN0ZWQrIi9taW5tYXgiOwogICAgICAgIGF4aW9zLmdldChwYXRoKQogICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICB0aGlzLm1pbkRhdGUgPSByZXNwb25zZS5kYXRhLmRhdGFbMF0ubWluOwogICAgICAgICAgICB0aGlzLm1heERhdGUgPSByZXNwb25zZS5kYXRhLmRhdGFbMF0ubWF4OwogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCgogICAgZ2V0RGF0YU1pbk1heE1lZCgpIHsKICAgICAgdGhpcy5kYXRlTGlzdD0gW107CiAgICAgIHRoaXMuZGF0YUxpc3QgPSBbXTsKICAgICAgaWYodGhpcy5Mc2VsZWN0ZWQhPSAnJyAmJiB0aGlzLkZzZWxlY3RlZCAhPSAnJyl7CiAgICAgICAgdGhpcy5zdGFydERhdGUgPSBtb21lbnQodGhpcy5zdGFydERhdGUpLmZvcm1hdCgnWVlZWS1NTS1ERCcpOwogICAgICAgIHRoaXMuZW5kRGF0ZSA9IG1vbWVudCh0aGlzLmVuZERhdGUpLmZvcm1hdCgnWVlZWS1NTS1ERCcpOwogICAgICAgIGxldCBwYXRoID0gImh0dHBzOi8vc21hcnRzeXN0ZW1zcm9qZWN0Lmhlcm9rdWFwcC5jb20vYXBpLyIrdGhpcy5Mc2VsZWN0ZWQrIi8iK3RoaXMuRnNlbGVjdGVkKyIvIit0aGlzLnN0YXJ0RGF0ZSsiJiIrdGhpcy5lbmREYXRlKyIvbWlubWF4bWVkIjsKICAgICAgICBheGlvcy5nZXQocGF0aCkKICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgdGhpcy5taW5EYXRhID0gcmVzcG9uc2UuZGF0YS5kYXRhWzBdLm1pbjsKICAgICAgICAgICAgdGhpcy5tYXhEYXRhID0gcmVzcG9uc2UuZGF0YS5kYXRhWzBdLm1heDsKICAgICAgICAgICAgdGhpcy5tZWREYXRhID0gcmVzcG9uc2UuZGF0YS5kYXRhWzBdLm1lZDsKICAgICAgICAgIH0pCiAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICAgIH0pOwogICAgICB9CiAgICB9LAoKICAgIGRpc3BsYXlHcmFwaCgpIHsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhdGFBbmF5c2UnKS5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZSc7CiAgICAgIC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dyYXBoJykuc3R5bGUuZGlzcGxheT0gJ2lubGluZSc7CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgICB0aGlzLmdldExpbmVMaXN0KCk7CiAgICAgIHRoaXMuZ2V0TGluZUZpbHRlcnMoKTsKICAgICAgdGhpcy5nZXRGaWx0ZXJTZW5zb3JMaW1pdHMoKTsKICAgICAgdGhpcy5nZXRGaWx0ZXJEYXRhQmV0d2VlbkRhdGVzKCk7CiAgICAgIHRoaXMuZ2V0RGF0ZXNNaW5NYXgoKTsKICAgICAgdGhpcy5nZXREYXRhTWluTWF4TWVkKCk7CiAgICAgIHRoaXMuZGlzcGxheUdyYXBoKCk7CgogIH0sCiAgbW91bnRlZCgpewogICAgCiAgfQoKfQo="},{"version":3,"sources":["FrontEnd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA","file":"FrontEnd.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <div>\n      \n      <br>\n      <table>\n        \n        <tr>\n          <th>Select line:</th>\n          <th>\n            <select v-model=\"Lselected\">\n              <option value=\"\" disabled selected>Select Line</option>\n              <option v-for=\"line in lineList\" v-bind:key=\"line.filter_type\" v-on:click=\"getLineFilters\">{{line.filter_type}} </option>\n            </select>\n          </th>\n        </tr>\n        <tr>\n          <th>Select spesific filter</th>\n          <th>\n            <select v-model=\"Fselected\">\n              <option value=\"\" disabled selected>Select filter</option>\n              <option v-for=\"filter in filtersList\" v-bind:key=\"filter.filter_name\" v-on:click=\"getDatesMinMax();getFilterSensorLimits(); getDataBadLowerd();getDataBadUpper();\"> {{filter.filter_name}} </option>\n            </select>\n          </th>\n        </tr>\n        <br>\n        <tr>\n          <th>Graph lower limit:</th>\n          <th><input v-model=\"lessLimit\" type=\"text\"></th>\n        </tr>\n        <tr>\n          <th>Graph upper limit:</th>\n          <th><input v-model=\"upperLimit\" type=\"text\"></th>\n        </tr>\n        <tr>\n          <th>Select days:</th>\n        </tr>\n        <tr>          \n          <th>Start date</th>\n          <th><data-picker v-model=\"startDate\" :default-value=\"minDate\"></data-picker></th>\n          <th>End date</th>\n          <th><data-picker v-model=\"endDate\" :default-value=\"maxDate\"></data-picker></th>\n        </tr>\n      </table>\n    </div>\n    <br>\n    <div>\n      <button id=\"gButton\" v-on:click=\"loaded=false; getDataMinMaxMed(); getFilterDataBetweenDates(); displayGraph();\">Generate</button>\n    </div>\n    <br>\n    <div id=\"dataAnayse\" style=\"display: none;\">\n      <table border=\"1px\">\n        <tr>\n          <th>Line name</th>\n          <th>Filter sensor name</th>\n          <th>Upper limit</th>\n          <th>Lower limit</th>\n          <th>Waste less </th>\n          <th> Waste greater </th>\n          <th>Waste SUM </th>\n          <th>OK </th>\n          <th>SUM All</th>\n          <th>Min</th>\n          <th>Max</th>\n          <th>Med</th>\n        </tr>\n        <tr>\n          <th>{{Lselected}}</th>\n          <th>{{Fselected}}</th>\n          <th>{{upperLimit}}</th>\n          <th>{{lessLimit}}</th>\n          <th>{{badLower.length}}</th>\n          <th>{{badUpper.length}}</th>\n          <th>{{badLower.length+badUpper.length}}</th>\n          <th>{{dataList.length}}</th>\n          <th>{{badUpper.length+badLower.length+dataList.length}}</th>\n          <th>{{minData}}</th>\n          <th>{{maxData}}</th>\n          <th>{{medData}}</th>\n        </tr>\n      </table>\n      <br>\n      <span>{{Fselected}}</span>\n      <br>\n    </div>\n    \n    <ScatterChart v-if=\"loaded\" :label=\"dateList\" :datacollection=\"dataList\" :upperLimit=\"upperLine\" :lowerLimit=\"lowerLine\" :badUpper=\"badUpper\" :badLower=\"badLower\"></ScatterChart>\n  </div>\n\n</template>\n\n<script>\n\nimport DataPicker from 'vue2-datepicker';\nimport 'vue2-datepicker/index.css';\nimport moment from 'moment';\nimport axios from 'axios';\n//import LineChart from './utils/LineChart'\n//import LineChart from './utils/LineChart.vue';\nimport ScatterChart from './utils/ScatterChart.vue';\n//import { Line } from 'vue-chartjs';\n\nexport default {\n  name: 'FrontEnd',\n  components: {\n    DataPicker,\n    //LineChart,\n    ScatterChart,\n  },\n  data() {\n    return {\n      upperLimit: '',\n      lessLimit: '',\n      startDate: '',\n      endDate: '',\n      Lselected: '',\n      Fselected: '',\n      lineList: [],\n      filtersList: [],\n      limitsList: [],\n      filterDataList: [],\n      gLable:[],\n      dateList:[],\n      dataList:[],\n      okData: [],\n      minmax: [],\n      minDate: '',\n      maxDate: '',\n      minData: '',\n      maxData: '',\n      medData: '',\n      badLower: [],\n      badUpper: [],\n      datacollection: null,\n      lowerLine: [],\n      upperLine: [],\n      loaded: false\n    }\n  },\n  props: {\n    msg: String\n  },\n  methods: {\n\n    \n     getLineList() {\n      const path = \"https://smartsystemsroject.herokuapp.com/api/filterTypes\";\n      axios.get(path)\n        .then(response => {\n          this.lineList = response.data.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n     getLineFilters() {\n      if(this.Lselected != ''){\n        let path = \"https://smartsystemsroject.herokuapp.com/api/\"+this.Lselected+\"/filters\";\n        axios.get(path)\n          .then(response => {\n            this.filtersList = response.data.data.reverse();\n            for(var i = 0; i<this.filtersList.length; i++){\n              console.log(this.filtersList[i].filter_name);\n              this.gLable.push(this.filtersList[i].filter_name);\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    },\n\n    getFilterSensorLimits() {\n      if(this.Fselected != ''){\n        let path = \"https://smartsystemsroject.herokuapp.com/api/\"+this.Lselected+\"/\"+this.Fselected+\"\";\n        axios.get(path)\n          .then(response => {\n            this.limitsList = response.data.data;\n            this.lessLimit = this.limitsList[0].graph_lower_limit;\n            this.upperLimit = this.limitsList[0].graph_upper_limit;\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n\n    getFilterDataBetweenDates() {\n      this.dateList= [];\n      this.dataList = [];\n      this.upperLine = [];\n      this.lowerLine = [];\n      this.badLower = [];\n      this.badUpper = [];\n      if(this.startDate != '' || this.endDate != ''){\n        this.startDate = moment(this.startDate).format('YYYY-MM-DD');\n        this.endDate = moment(this.endDate).format('YYYY-MM-DD');\n        let path= \"https://smartsystemsroject.herokuapp.com/api/\"+this.Lselected+\"/\"+this.Fselected+\"/\"+this.startDate+\"&\"+this.endDate;\n        axios.get(path)\n          .then(response => {\n            this.filterDataList = response.data.data;\n            for(var i=0; i<this.filterDataList.length; i++){\n              if(this.filterDataList[i].a_data > this.upperLimit){\n                this.badUpper.push({x: moment.utc(this.filterDataList[i].a_date).format('YYYY-MM-DD-HH:mm:ss'),y: this.filterDataList[i].a_data})\n              }\n              else if(this.filterDataList[i].a_data < this.lessLimit){\n                this.badLower.push({x: moment.utc(this.filterDataList[i].a_date).format('YYYY-MM-DD-HH:mm:ss'),y: this.filterDataList[i].a_data})\n              }\n              else{\n                this.dataList.push({x: moment.utc(this.filterDataList[i].a_date).format('YYYY-MM-DD-HH:mm:ss'),y: this.filterDataList[i].a_data})\n              }\n              //this.dataList.push(this.filterDataList[i].a_data);\n              this.dateList.push(moment.utc(this.filterDataList[i].a_date).format('YYYY-MM-DD-HH:mm:ss'));\n            }\n            \n            this.upperLine.push({x: moment.utc(this.filterDataList[0].a_date).format('YYYY-MM-DD-HH:mm:ss'), y: this.upperLimit});\n            this.upperLine.push({x: moment.utc(this.filterDataList[this.filterDataList.length-1].a_date).format('YYYY-MM-DD-HH:mm:ss'), y: this.upperLimit});\n            this.lowerLine.push({x: moment.utc(this.filterDataList[0].a_date).format('YYYY-MM-DD-HH:mm:ss'), y: this.lessLimit});\n            this.lowerLine.push({x: moment.utc(this.filterDataList[this.filterDataList.length-1].a_date).format('YYYY-MM-DD-HH:mm:ss'), y: this.lessLimit});\n\n            /*console.log(this.filterDataList);\n            console.log(this.dateList);\n            console.log(this.upperLine);\n            console.log(this.lowerLine);\n            console.log(this.badUpper);\n            console.log(this.dataList);\n            console.log(this.badLower);*/\n            this.loaded= true;\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n\n    getDatesMinMax() {\n      if(this.Lselected!= '' && this.Fselected != ''){\n        console.log(\"kontroll\");\n        let path = \"https://smartsystemsroject.herokuapp.com/api/\"+this.Lselected+\"/\"+this.Fselected+\"/minmax\";\n        axios.get(path)\n          .then(response => {\n            this.minDate = response.data.data[0].min;\n            this.maxDate = response.data.data[0].max;\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n\n    getDataMinMaxMed() {\n      this.dateList= [];\n      this.dataList = [];\n      if(this.Lselected!= '' && this.Fselected != ''){\n        this.startDate = moment(this.startDate).format('YYYY-MM-DD');\n        this.endDate = moment(this.endDate).format('YYYY-MM-DD');\n        let path = \"https://smartsystemsroject.herokuapp.com/api/\"+this.Lselected+\"/\"+this.Fselected+\"/\"+this.startDate+\"&\"+this.endDate+\"/minmaxmed\";\n        axios.get(path)\n          .then(response => {\n            this.minData = response.data.data[0].min;\n            this.maxData = response.data.data[0].max;\n            this.medData = response.data.data[0].med;\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n\n    displayGraph() {\n      document.getElementById('dataAnayse').style.display = 'inline';\n      //document.getElementById('graph').style.display= 'inline';\n    }\n  },\n  created() {\n      this.getLineList();\n      this.getLineFilters();\n      this.getFilterSensorLimits();\n      this.getFilterDataBetweenDates();\n      this.getDatesMinMax();\n      this.getDataMinMaxMed();\n      this.displayGraph();\n\n  },\n  mounted(){\n    \n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n#dataP {\n  margin: 400px 0 0;\n}\n</style>\n"]}]}