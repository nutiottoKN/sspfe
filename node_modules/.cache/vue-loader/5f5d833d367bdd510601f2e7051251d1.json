{"remainingRequest":"/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karle/Desktop/Learning/project2/sspfrontend/src/components/FrontEnd.vue?vue&type=template&id=3d23ed22&scoped=true&","dependencies":[{"path":"/home/karle/Desktop/Learning/project2/sspfrontend/src/components/FrontEnd.vue","mtime":1608160263640},{"path":"/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1606035500272},{"path":"/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1606035517917},{"path":"/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1606035500272},{"path":"/home/karle/Desktop/Learning/project2/sspfrontend/node_modules/vue-loader/lib/index.js","mtime":1606035517917}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}